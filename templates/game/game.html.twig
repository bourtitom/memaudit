{% extends 'base.html.twig' %}

{% block title %}Register{% endblock %}

{% block body %}
    <style>
        .card-container {
            perspective: 1000px;
            aspect-ratio: 3/4;
        }
        .card-flip {
            position: relative;
            width: 100%;
            height: 100%;
            transition: transform 0.6s;
            transform-style: preserve-3d;
            cursor: pointer;
        }
        .card-flip.flipped {
            transform: rotateY(180deg);
        }
        .card-front, .card-back {
            position: absolute;
            width: 100%;
            height: 100%;
            backface-visibility: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 24px;
        }
        .card-front {
            background-color: var(--bs-primary);
            color: white;
        }
        .card-back {
            background-color: var(--bs-info);
            color: white;
            transform: rotateY(180deg);
        }
        .card-flip.matched .card-back {
            background-color: var(--bs-success);
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h1 class="text-center mb-4">Jeu de Memory</h1>
        
        <div class="row justify-content-center g-3 mb-4" id="gameContainer">
            <!-- Les cartes seront ajout√©es ici par JavaScript -->
        </div>
        
        <div class="text-center">
            <h5 class="mb-3">Coups : <span id="moves" class="badge bg-primary">0</span></h5>
        </div>
    </div>

    <script>
        const symbols = ['üé®', 'üéµ', 'üéÆ', 'üìö', '‚öΩ', 'üé¨', 'üé®', 'üéµ', 'üéÆ', 'üìö', '‚öΩ', 'üé¨'];
        let flippedCards = [];
        let matchedPairs = 0;
        let moves = 0;

        function shuffleArray(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
            return array;
        }

        function createBoard() {
            const shuffledSymbols = shuffleArray([...symbols]);
            const gameContainer = document.getElementById('gameContainer');
            
            shuffledSymbols.forEach((symbol, index) => {
                const colDiv = document.createElement('div');
                colDiv.className = 'col-6 col-sm-4 col-md-2';

                const cardContainer = document.createElement('div');
                cardContainer.className = 'card-container';

                const cardFlip = document.createElement('div');
                cardFlip.className = 'card-flip shadow-sm';
                cardFlip.dataset.index = index;
                cardFlip.dataset.symbol = symbol;

                const cardFront = document.createElement('div');
                cardFront.className = 'card-front rounded';
                cardFront.innerHTML = '‚ùì';

                const cardBack = document.createElement('div');
                cardBack.className = 'card-back rounded';
                cardBack.textContent = symbol;

                cardFlip.appendChild(cardFront);
                cardFlip.appendChild(cardBack);
                cardContainer.appendChild(cardFlip);
                colDiv.appendChild(cardContainer);
                gameContainer.appendChild(colDiv);

                cardFlip.addEventListener('click', flipCard);
            });
        }

        function flipCard() {
            if (flippedCards.length === 2) return;
            if (this.classList.contains('flipped')) return;

            this.classList.add('flipped');
            flippedCards.push(this);

            if (flippedCards.length === 2) {
                moves++;
                document.getElementById('moves').textContent = moves;
                setTimeout(checkMatch, 1000);
            }
        }

        function checkMatch() {
            const [card1, card2] = flippedCards;

            if (card1.dataset.symbol === card2.dataset.symbol) {
                card1.classList.add('matched');
                card2.classList.add('matched');
                matchedPairs++;
                if (matchedPairs === 6) {
                    setTimeout(() => {
                        alert(`F√©licitations ! Vous avez gagn√© en ${moves} coups !`);
                    }, 500);
                }
            } else {
                card1.classList.remove('flipped');
                card2.classList.remove('flipped');
            }
            flippedCards = [];
        }

        createBoard();
    </script>

{% endblock %}
